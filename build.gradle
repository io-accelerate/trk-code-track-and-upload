//~~~~ Settings for Gradle
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath 'us.kirchmeier:gradle-capsule-plugin:1.0.2'
        classpath 'ch.netzwerg:gradle-release-plugin:1.2.4'
    }
}

apply plugin: 'java'
apply plugin: 'application'

group 'ro.ghionoiu'

//noinspection GroovyUnusedAssignment
targetCompatibility = JavaVersion.VERSION_1_8
//noinspection GroovyUnusedAssignment
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenLocal()
}

/**
 * Design:
 * Humble-video is composed of two jar files _noarch + native.
 * The _noarch contains the API while the native jar contains
 * the JNI libraries required to interface with the Native codecs
 *
 * So:
 * - the capsule is configured to only download the artifact required for that platform
 * - the test includes all the native libraries to be cross-platform
 * - there is no native library configured for the compile target
 */
ext {
    humbleVideoVersion = '0.2.1'
    jettyVersion = '9.4.7.v20170914'
}

dependencies {
    compile ('ro.ghionoiu:dev-sourcecode-record:0.0.13') {
        exclude group: 'com.beust', module: 'jcommander'
        exclude group: 'org.apache.httpcomponents'
    }
    compile ('ro.ghionoiu:dev-screen-record:0.0.5') {
        exclude group: 'com.beust', module: 'jcommander'
        exclude group: 'org.apache.httpcomponents'
    }
    compile ('ro.ghionoiu:s3-sync-stream:0.0.12') {
        exclude group: 'com.beust', module: 'jcommander'
    }
    compile 'com.beust:jcommander:1.72'
    compile 'org.eclipse.jetty:jetty-server:'+jettyVersion
    compile 'org.eclipse.jetty:jetty-servlet:'+jettyVersion
    compile 'org.fusesource.jansi:jansi:1.8'

    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compileOnly 'org.projectlombok:lombok:1.16.16'

    // Uncomment if you run from IDE
//    compile 'io.humble:humble-video-arch-x86_64-apple-darwin12:'+humbleVideoVersion


    testCompile('junit:junit:4.11'){
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompileOnly 'org.projectlombok:lombok:1.16.16'
}

// ~~~~~ Packaging

apply plugin: 'us.kirchmeier.capsule'

mainClassName = "tdl.record_upload.RecordAndUploadApp"
jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

task mavenCapsule(type: MavenCapsule){
    applicationClass mainClassName

    capsuleManifest {
        minJavaVersion = '1.8.0'
        dependencyConfiguration configurations.compile
        repositories << 'jcenter'
//        repositories << 'local'

        //noinspection GroovyAssignabilityCheck
        platform('windows'){
            dependencies << 'io.humble:humble-video-arch-x86_64-w64-mingw32:'+humbleVideoVersion
            dependencies << 'io.humble:humble-video-arch-i686-w64-mingw32:'+humbleVideoVersion
        }
        //noinspection GroovyAssignabilityCheck
        platform('macos'){
            dependencies << 'io.humble:humble-video-arch-x86_64-apple-darwin12:'+humbleVideoVersion
            dependencies << 'io.humble:humble-video-arch-i686-apple-darwin12:'+humbleVideoVersion
        }
        //noinspection GroovyAssignabilityCheck
        platform('linux'){
            dependencies << 'io.humble:humble-video-arch-x86_64-pc-linux-gnu6:'+humbleVideoVersion
            dependencies << 'io.humble:humble-video-arch-i686-pc-linux-gnu6:'+humbleVideoVersion
        }
    }
}

//~~~~~ Release management

apply plugin: "ch.netzwerg.release"

release {
    dependsOn build // 'distZip' could e.g be used in combination with the 'application' plugin
    push = false // 'true' would e.g. be useful when triggering the release task on a CI server
    versionSuffix = '-SNAPSHOT' // '.DEV' or '' (empty) could be useful alternatives
    tagPrefix = 'v' // 'r' or '' (empty) could be useful alternatives
}